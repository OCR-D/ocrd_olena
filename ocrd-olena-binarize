#!/bin/bash
set -eu
# set -x

which ocrd >/dev/null 2>/dev/null || { echo "ocrd not in \$PATH. Panicking"; exit 1; }

SHAREDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"

declare -A mimetype2extension=(
    ['image/tiff']='.tiff'
    ['image/jp2']='.jp2'
    ['image/png']='.png'
)

main () {
    source `ocrd bashlib filename`
    ocrd__wrap "$SHAREDIR/ocrd-tool.json" "ocrd-olena-binarize" "$@"

    cd "${ocrd__argv[working_dir]}"

    ocrd workspace find              \
        -G "${ocrd__argv[input_file_grp]}" \
        -k local_filename            \
        -k ID                        \
        -k mimetype                  \
        --download                   \
    | while read -r csv;do
        # Parse comma separated fields
        local IFS=$'\t'
        local fields=($csv)

        local in_fpath="${fields[0]}"
        local in_id="${fields[1]}"
        local in_mimetype="${fields[2]}"
        local in_extension=${mimetype2extension[$in_mimetype]}

        local out_fpath="${in_fpath%$in_extension}.${params[impl]}.png"
        local out_id="$in_id-${params[impl]}"

        # Binarize as PBM
        scribo-cli "${params[impl]}" "$in_fpath" "$out_fpath.pbm"

        # Convert PBM to PNG
        convert  "$out_fpath.pbm" "$out_fpath"

        # Remove PBM
        rm "$out_fpath.pbm" 

        # Add files
        ocrd workspace add                \
            -G "${ocrd__argv[output_file_grp]}" \
            -m image/png                  \
            -i "$out_id"                  \
            "$out_fpath"
    done
}


main "$@"
